给定长度为 N的字符串S，要构造一个长度为N的字符串T。起初，T是一个空串，随后反复进行下列任意操作。
 
从S的头部删去一个字符，加到T的尾部
从S的尾部删去一个字符，加到T的尾部

目标是要构造字典序尽可能小的字符串T。

限制条件：1 <= N <= 2000;字符串S只包含大写英文字母

例如输入
 N = 6
 S = “ACDBCB"
 
 输出
 ABCBCD









#include <cstdlib>
using namespace std;
void solve();
int main(int argc, char** argv)
{
    void solve();
    return 0;
}
void solve()
{
     int N;
    char S[N+1];
    cin >> N;
    for(int i = 0;i<N;++i)
        cin >> S;
    int a = 0, b = N - 1;
    while(a<= b)
    {
        bool left = false;
        for(int i  = 0; a + i <= b; i++)
        {
            if (S[a+i] < S[b - i])
            {
                left = true;
                break;
            }
            else if (S[a+i] >S[b - i])
            {
                left = false;
                break;
            }
        }
        if(left)
            cout << S[a++];
        else
            cout << S[b--];
         }
    cout << endl ;
}

